@use '@/styles/utils';
@use '@/styles/variables.module';

.root {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  border-radius: 30px;

  &:focus-within {
    label {
      color: variables.$primary-color;
    }

    .fieldset {
      border-color: variables.$primary-color;
    }
  }

  &:focus-within,
  &.active {
    label {
      transform: translate(0, -40%) scale(0.8);
      top: 0;
    }

    .legend {
      transition: variables.$transition-ultrafast;
      max-width: 100%;
    }
  }

  &.error {
    .fieldset {
      border-color: variables.$error-color !important;
    }

    .label {
      color: variables.$error-color !important;
    }
  }
}

.fieldset {
  position: absolute;
  text-align: left;
  inset: -5px 0px 0px;
  margin: 0;
  padding: 0 22px;
  pointer-events: none;
  border-radius: inherit;
  overflow: hidden;
  border: 1px solid #ced4dc;
  transition: variables.$transition-ultrafast;
}

.legend {
  width: auto;
  overflow: hidden;
  display: block;
  padding: 0;
  height: 11px;
  font-size: 0.75em;
  visibility: hidden;
  max-width: 0;
  transition-delay: 0.1ms;

  span {
    display: inline-block;
    opacity: 0;
    visibility: visible;
    padding: utils.spacing(0, 1);
    font-size: 11.2px;
  }
}

.textField {
  color: variables.$dark-color;
  outline: none;
  font-size: 16px;
  line-height: 18px;
  padding: utils.spacing(0, 4);
  width: 100%;
  border: none;
  border-radius: 30px;
  transition: all variables.$transition-ultrafast ease;
}

.input {
  height: 48px;
  background: transparent;

  &.small {
    height: 40px;
    font-size: 14px;
    padding: utils.spacing(0, 3);
  }

  &:disabled {
    background-color: variables.$grey-light-color;
  }
}

.textArea {
  min-height: 52px;
  padding: utils.spacing(2, 4);
  border-radius: 24px;
  background: transparent;

  &:disabled {
    background-color: variables.$grey-light-color;
  }
}

.label {
  position: absolute;
  pointer-events: none;
  transform: translate(0, -50%) scale(1);
  transform-origin: top left;
  transition:
    200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
    color 0.3s ease;
  color: variables.$grey-color;
  font-size: 14px;
  line-height: 18px;
  top: 50%;
  left: utils.spacing(3);
  padding: utils.spacing(0, 1);
  border-radius: 4px;
}

.labelStartAdornment {
  .input {
    padding-left: 10px;
  }
  .label {
    left: 100px;
  }
  &:focus-within,
  &.active {
    label {
      transform: translate(-75px, -40%) scale(0.8);
      top: 0;
    }
  }
}

.textAreaLabel {
  top: utils.spacing(2);
  transform: translate(0, 0) scale(1);
}

.startAdornment {
}

.endAdornment {
  position: absolute;
  right: utils.spacing(1);
  top: 50%;
  transform: translateY(-50%);
}

.errorText {
  position: absolute;
  color: variables.$error-color;
  font-size: 12px;
  top: 50px;
  left: 33px;
}

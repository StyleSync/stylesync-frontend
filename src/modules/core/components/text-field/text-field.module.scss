@use '@/styles/utils';
@use '@/styles/variables.module';

.container {
  position: relative;
  width: 100%;

  &:focus-within label {
    transform: translate(0, -10%) scale(0.8);
    top: 0;
    color: variables.$primary-color;
  }
}

.fieldset {
  border-radius: 30px;
  border: 1px solid variables.$primary-light-color;
  padding: 0 26px;
}
.legend {
  width: auto;
  overflow: hidden;
  display: block;
  padding: 0;
  height: 11px;
  font-size: 0.75em;
  visibility: hidden;
  max-width: 0.01px;
}
.span {
  display: inline-block;
  opacity: 0;
  visibility: visible;
  padding-left: 5px;
  padding-right: 5px;
}

.textField {
  color: variables.$dark-color;
  outline: none;
  font-size: 14px;
  line-height: 18px;
  padding: utils.spacing(0, 4);
  width: 100%;
  border: none;
  border-radius: 30px;
  transition: border variables.$transition-ultrafast ease;
}

.input {
  height: 48px;
  background: transparent;
  &:focus {
    & + .legend {
      max-width: 100%;
    }
  }
}

.textArea {
  min-height: 52px;
  padding: utils.spacing(2, 4);
  border-radius: 24px;
}

.label {
  position: absolute;
  pointer-events: none;
  transform: translate(0, -50%) scale(1);
  transform-origin: top left;
  transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms, color 0.3s ease;
  color: #939daa;
  font-size: 14px;
  line-height: 18px;
  top: 50%;
  left: utils.spacing(3);
  padding: utils.spacing(0, 1);
  border-radius: 4px;
  background-color: #fff;
}

.textAreaLabel {
  top: utils.spacing(2);
  transform: translate(0, 0) scale(1);
}

.labelActive {
  transform: translate(0, -40%) scale(0.8);
  top: 0;
}

.labelError {
  color: variables.$error-color !important;
}

.endAdornment {
  position: absolute;
  right: utils.spacing(1);
  top: 50%;
  transform: translateY(-50%);
}

.textFieldError {
  border: 1px solid variables.$error-color;

  &:focus {
    border: 1px solid variables.$error-color;
  }
}
